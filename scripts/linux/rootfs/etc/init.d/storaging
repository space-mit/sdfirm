#!/bin/sh

# This invokes a program mounting partitions used for storing firmware and
# implements factory firmware save/restore ability.
export DEVICE=`cat /etc/sdfirm/storaging.conf`

FIRM_PART=/dev/${DEVICE}2
FIRM_MOUNT=/mnt/p2
CONF_PART=/dev/${DEVICE}3
CONF_MOUNT=/mnt/p3

DATA_IMAGE=var.img
NEW_IMAGE=new/var.img
INIT_IMAGE=init.tgz

ONLINE_PATH=/var
OFFLINE_PATH=/tmp/fwsave

SYSCONF_DIR=sysconf

log_msg()
{
	LOG_LEVEL=$1
	LOG_MSG=$2
	LOG_FACILITY=local0
	LOG_TAG=sdfirm

	logger -p $LOG_FACILITY.$LOG_LEVEL -t $LOG_TAG $LOG_MSG
	echo "$LOG_MSG"
}

init_all()
{
	(
		cd $OFFLINE_PATH
		umount $FIRM_MOUNT
		mount -r $FIRM_PART $FIRM_MOUNT
		rm -rf $SYSCONF_DIR
		mkdir -p $SYSCONF_DIR
		tar -C $SYSCONF_DIR -zxf $FIRM_MOUNT/$INIT_IMAGE
		umount $FIRM_MOUNT
	)
	log_msg info "sdfirm: success"
}

start_storage()
{
	restoring=0

	# prepare everyting needed
	mount -n -t proc /proc /proc
	mkdir -p $OFFLINE_PATH

	# prepare /mnt/p2
	if ! e2fsck -fp $CONF_PART
	then
		mke2fs -F -m0 -q $CONF_PART
		tune2fs -c 0 -i 0 $CONF_PART
		restoring=1
	fi
	mount -w $CONF_PART $CONF_MOUNT

	# prepare var.img
	[ -f $CONF_MOUNT/$NEW_IMAGE ] && echo "upgrade system" && \
	mv -f $CONF_MOUNT/$NEW_IMAGE $CONF_MOUNT/$DATA_IMAGE

	if ! e2fsck -B 1024 -fp $CONF_MOUNT/$DATA_IMAGE 1>/dev/null 2>&1
	then
		echo "lock temporal image."
		touch /$DATA_IMAGE
		rm -f $CONF_MOUNT/$DATA_IMAGE
		dd if=/dev/zero of=/$DATA_IMAGE bs=1024 count=16384
		mke2fs -F -m0 -q /$DATA_IMAGE
		tune2fs -c 0 -i 0 /$DATA_IMAGE
		mv -f /$DATA_IMAGE $CONF_MOUNT/$DATA_IMAGE
		restoring=1
	fi

	mount -o loop $CONF_MOUNT/$DATA_IMAGE $OFFLINE_PATH
	if [ ! -d "$OFFLINE_PATH/$SYSCONF_DIR" ] ; then
		restoring=1
	fi
	umount $OFFLINE_PATH
	rm -rf $OFFLINE_PATH

	if [ "$restoring" != "0" ] ; then
		mount -o loop $CONF_MOUNT/$DATA_IMAGE $OFFLINE_PATH
		init_all
		umount $OFFLINE_PATH
		rm -rf $OFFLINE_PATH
	fi

	/bin/mount -av > /dev/null 2>&1

	cp -fp $CONF_MOUNT/$DATA_IMAGE /tmp
	umount $CONF_MOUNT
	mount -o loop /tmp/$DATA_IMAGE $ONLINE_PATH
}

stop_storage()
{
	umount $CONF_PART
	umount $OFFLINE_PATH
	/usr/dot1x/sbin/fwsave all
}

case "$1" in
	start)
		start_storage || exit 1
		;;
	stop)
		stop_storage || exit 1
		;;
	*)
		echo "Usage: `basename $0` {start|stop}"
		;;
esac
exit 0


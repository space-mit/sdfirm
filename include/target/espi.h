#ifndef __ESPI_H_INCLUDE__
#define __ESPI_H_INCLUDE__

#include <target/generic.h>

#define ESPI_RESPONSE_MODIFIER_OFFSET		6
#define ESPI_RESPONSE_MODIFIER_MASK		REG_2BIT_MASK
#define ESPI_RSP_NRESPONSE			ESPI_RESPONSE_MODIFIER(0x3)
#define ESPI_RSP_RESPONSE			ESPI_RESPONSE_MODIFIER(0x0)
#define ESPI_RSP_ACCEPT(r)			(ESPI_RESPONSE_MODIFIER(r) | 0x08)
#define ESPI_RSP_DEFER				(ESPI_RSP_RESPONSE | 0x01)
#define ESPI_RSP_NON_FATAL_ERROR		(ESPI_RSP_RESPONSE | 0x02)
#define ESPI_RSP_FATAL_ERROR			(ESPI_RSP_RESPONSE | 0x03)
#define ESPI_RSP_WAIT_STATE			(ESPI_RSP_RESPONSE | 0x0f)
#define ESPI_RSP_NO_RESPONSE			(ESPI_RSP_NRESPONSE | 0x0f)

#define ESPI_RSP_APPEND_NONE			0x00
#define ESPI_RSP_APPEND_PERI			0x01
#define ESPI_RSP_APPEND_VWIRE			0x02
#define ESPI_RSP_APPEND_FLASH			0x03

#define ESPI_CMD_LEN(opcode)			((opcode & 0x3) + 1)

#define ESPI_CMD_PUT_PC				0x00
#define ESPI_CMD_GET_PC				0x01
#define ESPI_CMD_PUT_NP				0x02
#define ESPI_CMD_GET_NP				0x03
#define ESPI_CMD_PUT_IORD_SHORT(c)		(0x40 | (c))
#define ESPI_CMD_PUT_IOWR_SHORT(c)		(0x44 | (c))
#define ESPI_CMD_PUT_MEMRD32_SHORT(c)		(0x48 | (c))
#define ESPI_CMD_PUT_MEMWR32_SHORT(c)		(0x4C | (c))
#define ESPI_CMD_PUT_VWIRE			0x04
#define ESPI_CMD_GET_VWIRE			0x05
#define ESPI_CMD_PUT_OOB			0x06
#define ESPI_CMD_GET_OOB			0x07
#define ESPI_CMD_PUT_FLASH_C			0x08
#define ESPI_CMD_GET_FLASH_NP			0x09
#define ESPI_CMD_GET_STATUS			0x25
#define ESPI_CMD_SET_CONFIGURATION		0x22
#define ESPI_CMD_GET_CONFIGURATION		0x21
#define ESPI_CMD_RESET				0xFF

#define ESPI_CMD_C_1BYTE			0x00
#define ESPI_CMD_C_2BYTES			0x01
#define ESPI_CMD_C_4BYTES			0x03
#define ESPI_CMD_PUT_IORD8			ESPI_CMD_PUT_IORD_SHORT(ESPI_CMD_C_1BYTE)
#define ESPI_CMD_PUT_IORD16			ESPI_CMD_PUT_IORD_SHORT(ESPI_CMD_C_2BYTES)
#define ESPI_CMD_PUT_IORD32			ESPI_CMD_PUT_IORD_SHORT(ESPI_CMD_C_4BYTES)
#define ESPI_CMD_PUT_IOWR8			ESPI_CMD_PUT_IOWR_SHORT(ESPI_CMD_C_1BYTE)
#define ESPI_CMD_PUT_IOWR16			ESPI_CMD_PUT_IOWR_SHORT(ESPI_CMD_C_2BYTES)
#define ESPI_CMD_PUT_IOWR32			ESPI_CMD_PUT_IOWR_SHORT(ESPI_CMD_C_4BYTES)
#define ESPI_CMD_PUT_MEMRD8			ESPI_CMD_PUT_MEMRD32_SHORT(ESPI_CMD_C_1BYTE)
#define ESPI_CMD_PUT_MEMRD16			ESPI_CMD_PUT_MEMRD32_SHORT(ESPI_CMD_C_2BYTES)
#define ESPI_CMD_PUT_MEMRD32			ESPI_CMD_PUT_MEMRD32_SHORT(ESPI_CMD_C_4BYTES)
#define ESPI_CMD_PUT_MEMWR8			ESPI_CMD_PUT_MEMWR32_SHORT(ESPI_CMD_C_1BYTE)
#define ESPI_CMD_PUT_MEMWR16			ESPI_CMD_PUT_MEMWR32_SHORT(ESPI_CMD_C_2BYTES)
#define ESPI_CMD_PUT_MEMWR32			ESPI_CMD_PUT_MEMWR32_SHORT(ESPI_CMD_C_4BYTES)

/* 4.4.2 Status */
#define ESPI_STATUS_PC_FREE			_BV(0)
#define ESPI_STATUS_NP_FREE			_BV(1)
#define ESPI_STATUS_VWIRE_FREE			_BV(2) /* Always 1 */
#define ESPI_STATUS_OOB_FREE			_BV(3)
#define ESPI_STATUS_PC_AVAIL			_BV(4)
#define ESPI_STATUS_NP_AVAIL			_BV(5)
#define ESPI_STATUS_VWIRE_AVAIL			_BV(6)
#define ESPI_STATUS_OOB_AVAIL			_BV(7)
#define ESPI_STATUS_FLASH_C_FREE		_BV(8) /* Always 1 */
#define ESPI_STATUS_FLASH_NP_FREE		_BV(9)
#define ESPI_STATUS_FLASH_C_AVAIL		_BV(11)
#define ESPI_STATUS_FLASH_NP_AVAIL		_BV(12)

/* 5.5.1 Cycle Types */
#define ESPI_CYCLE_MEMRD32			0x00
#define ESPI_CYCLE_MEMRD64			0x02
#define ESPI_CYCLE_MEMWR32			0x01
#define ESPI_CYCLE_MEMWR64			0x03
#define ESPI_CYCLE_MESSAGE(r)			(0x10 | ((r) << 1))
#define ESPI_CYCLE_MESSAGE_DATA(r)		(0x11 | ((r) << 1))
#define ESPI_CYCLE_SUCCESS			0x06
#define ESPI_CYCLE_SUCCESS_DATA			(0x09 | ((r) << 1))
#define ESPI_CYCLE_UNSECCESS_DATA		(0x08 | ((r) << 1))
#define ESPI_CYCLE_OOB				0x21
#define ESPI_CYCLE_FLASH_READ			0x00
#define ESPI_CYCLE_FLASH_WRITE			0x01
#define ESPI_CYCLE_FLASH_ERASE			0x02

#include <driver/espi.h>

#endif /* __ESPI_H_INCLUDE__ */

This software contains source code developed by Lv "ZETALOG" Zheng during
his career. These source files may contain source code somewhat looks
"LIKE" an open source implementation. But surely, they have been modified
or thoroughly re-written and have been transformed into "ZETALOG" own
style.

As an engineer working in a nation that has many offshore software
development jobs, "ZETALOG" has to hop between the local commercial
companies. In order to avoid re-creating wheels (some data structure
implementation, some OS basic concept implementation), which is essential
for sdfirm engineering as "ZETALOG" conceptually believe that software
trends to converge to one single implementation for a pre-defined set of
functionalities and sdfirm is trying to become the implementation, in such
an industry chain to assure the efficiency that "ZETALOG" may be required
to provide in his new career roles, these files have to retain the ability
for being re-used by "ZETALOG" through all companies that hire him. In the
other word, "ZETALOG" has to convince his new employers that these files
can be re-licensed to any of their expected license without the worry that
his previous employers may still claim their copyrights. These source files
are hence released under a special license known as "ZETALOG" license.

The "ZETALOG" license is basically a GPLv2, with one exception.
1. When the source code in this project is used and re-used by a company or
   an individual that has nothing to do with ZETALOG's business, the
   project and its souce code can be simply considered released under
   GPLv2.
2. When the source code in this project is used and re-used by a company or
   an individual that has business including but not limited to "hiring
   ZETALOG", "being launched by ZETALOG", etc., with "ZETALOG", the project
   and its source code can be considered released under the special
   "ZETALOG" terms. The following paragraph describes "ZETALOG" terms.

"ZETALOG" is not a legal person, so the wording used in the "ZETALOG" terms
may not be sufficiently clear to explain what a company or an individual
should be aware of when they consider to import "ZETALOG" licensed software
to their business. The following tries to explain "ZETALOG" terms in a
simple way to dispel employers' misgivings:
1. The company or the individual can re-license this project and its source
   code into any expected license without informing "ZETALOG". However,
   when the source code is going to be published as open source, it has to
   be re-licensed to "ZETALOG" license.
2. "ZETALOG" has the rights to keep some source code related to the
   technology created by the company or the individual in an open source
   manner to make sure this project can demonstrate its ability to run the
   hardware created on top of that technology. Such open sourced software
   components are only limited to those components that are required to
   boot this project (clock, power, pin, serial, timer) or that whose open
   source variations can be found in the community.
   Be aware that the company or the individual always has the right to ask
   "ZETALOG" to stop publishing what has violated this term. And "ZETALOG"
   is the only contributor now in this project that can keep the components
   listed above close sourced while can still stay not violating this term.
So the "ZETALOG" terms are just an example of double-win terms:
1. If you want to use this software freely, please hire "ZETALOG, which
   also means you have bought the entire career accumulation of ZETALOG.
2. When you stop hiring "ZETALOG", please don't bother that "ZETALOG" may
   use same career skills demonstrated in this project to his other
   employers. These skills are considered basic skills for ZETALOG to
   fullfill his system software engineering role.
The above can be considered a fair employment terms between the employer of
"ZETALOG" and "ZETALOG". You didn't buy the entire life of "ZETALOG", you
shouldn't stop "ZETALOG" from using his career skills to earn a living.
3. If you want to use this software freely, please open source the least
   boot requirement to contribute it.
4. Components beyond the boot requirements should have already been known
   in the community, thus there is nothing you can potentially lose. On the
   contrary, you'll have an additional open source community solution and
   you'll automatically become an investor of this software.
The above can be considered a fair software usage terms between sdfirm and
the person who uses it. You want to import sdfirm, then do not try to
conceal the fact that sdfirm has the new user. And let sdfirm to expand its
influenceship so that you can also gain benefits from the others
contributors.
